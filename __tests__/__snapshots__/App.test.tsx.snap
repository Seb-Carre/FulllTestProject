// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render the screen as snapShot expected 1`] = `
<RCTSafeAreaView
  style={
    {
      "flex": 1,
      "padding": 10,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "padding": 10,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "gray",
            "height": 64,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            [
              {},
              undefined,
            ]
          }
        >
          Github Search
        </Text>
      </View>
      <TextInput
        onChangeText={[Function]}
        placeholder="Search input"
        placeholderTextColor="black"
        style={
          {
            "backgroundColor": "lightgray",
            "borderRadius": 5,
            "fontSize": 17,
            "fontWeight": "600",
            "marginBottom": 24,
            "marginLeft": 16,
            "marginRight": 16,
            "marginTop": 24,
            "padding": 20,
            "paddingLeft": 90,
          }
        }
        testID="App.SearchInput"
      />
      <View
        style={
          {
            "flexDirection": "row",
            "marginBottom": 24,
            "marginLeft": 16,
            "marginRight": 16,
            "marginTop": 24,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#44a1f8",
              "borderRadius": 4,
              "borderWidth": 4,
              "height": 20,
              "justifyContent": "center",
              "width": 20,
            }
          }
          testID="App.CheckBox"
        >
          <View
            style={{}}
            testID="Checkbox.viewStyle"
          />
        </View>
        <Text
          style={
            [
              {},
              {
                "flex": 1,
                "fontSize": 17,
                "fontWeight": "bold",
                "lineHeight": 20,
                "marginLeft": 10,
              },
            ]
          }
        >
          0
           
          <Text
            style={
              [
                {},
                {
                  "fontWeight": "normal",
                },
              ]
            }
          >
            elements selected
          </Text>
        </Text>
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="App.CopyButton"
          >
            <Image
              source={
                {
                  "testUri": "../../../assets/images/copy.png",
                }
              }
              style={
                {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            testID="App.DeleteButton"
          >
            <Image
              source={
                {
                  "testUri": "../../../assets/images/trash.png",
                }
              }
              style={
                {
                  "height": 20,
                  "width": 20,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        style={
          {
            "alignContent": "center",
            "alignItems": "center",
            "flex": 1,
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 20,
                  "fontWeight": "600",
                },
                undefined,
              ]
            }
            testID="App.BeginSearch"
          >
            Please ! Begin the search by typing the user you're looking for.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
